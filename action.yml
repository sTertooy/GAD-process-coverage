name: "Process coverage data"
description: "Process coverage data from testing the GAP package"
    
runs:
  using: "composite"
  steps:
  
    - name: "Process coverage data"
      shell: bash
      run: |
        set -ex
       
        # Add package to the custom GAP root
        ln -f -s $PWD /tmp/gaproot/pkg/
         
        # Add extra flags
        GAP="gap -q -A"
        
        # Generate library coverage reports
        $GAP <<GAPInput
        
        if LoadPackage( "profiling" ) <> true then
            Print( "ERROR: could not load profiling package" );
            FORCE_QUIT_GAP( 1 );
        fi;
        
        d := Directory( "coverage" );;
        covs := [];;
        
        for f in DirectoryContents( d ) do
            if f in [ ".", ".." ] then
                continue;
            fi;
            Add( covs, Filename( d, f) );
        od;
        Print( "Merging coverage results from ", covs, "\n" );
        r := MergeLineByLineProfiles( covs );;
        
        # Filtered out unwanted other packages to avoid bad coverage interaction
        r.line_info := Filtered( r.line_info, x -> not StartsWith( x[1], "/opt/gap/" ) );;
        Print( "Outputting JSON\n" );
        OutputJsonCoverage( r, "gap-coverage.json" );;
        QUIT_GAP(0);
        GAPInput
        
        # Generate source coverage reports by running gcov
        find . -type f -name "*.gcno" -exec gcov -pb {} +
